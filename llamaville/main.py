# generated by fastapi-codegen:
#   filename:  openapi-2.json
#   timestamp: 2021-05-26T13:18:58+00:00

from __future__ import annotations

from uuid import UUID

from fastapi import FastAPI, Query

from .models import LlamaListResponse, ScheduleListResponse

app = FastAPI(
    title='LlamaVille - system zarządzania lamami',
    description='System uporządzania lam na posterunku',
    termsOfService='https://brzydakville.space',
    contact={'email': 'llamanager@brzydakville.space'},
    license={
        'name': 'Apache 2.0',
        'url': 'http://www.apache.org/licenses/LICENSE-2.0.html',
    },
    version='1.0.0',
)


@app.get('/lama', response_model=LlamaListResponse)
def get_all_llamas() -> LlamaListResponse:
    """
    Pobierz listę lam
    """
    pass


@app.post('/lama', response_model=None)
def register_lama(
    x__h_m_a_c__s_i_g_n_a_t_u_r_e: str = Query(..., alias='X-HMAC-SIGNATURE')
) -> None:
    """
    Dodaj lamię
    """
    pass


@app.put('/lama/{id}', response_model=None)
def update_llama(
    id: UUID, x__h_m_a_c__s_i_g_n_a_t_u_r_e: str = Query(..., alias='X-HMAC-SIGNATURE')
) -> None:
    """
    Zaktualizuj dane lamy
    """
    pass


@app.delete('/lama/{id}', response_model=None)
def delete_llama(id: UUID) -> None:
    """
    Usuń lamę z bazy danych
    """
    pass


@app.get('/posterunek', response_model=ScheduleListResponse)
def get_schedule() -> ScheduleListResponse:
    """
    Pobierz listę wszystkich pozycji w harmonogramie z przypisanymi lamami
    """
    pass


@app.post('/posterunek', response_model=None)
def register_schedule(
    x__h_m_a_c__s_i_g_n_a_t_u_r_e: str = Query(..., alias='X-HMAC-SIGNATURE')
) -> None:
    """
    Przypisz lamę do posterunku w określonym harmonogramie
    """
    pass
